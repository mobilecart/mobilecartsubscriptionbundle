<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="cart.listener.subscription.checkout.form.class">MobileCart\SubscriptionBundle\EventListener\Checkout\CheckoutForm</parameter>
        <parameter key="cart.listener.subscription.cart.add.product.class">MobileCart\SubscriptionBundle\EventListener\Cart\AddProduct</parameter>
        <parameter key="cart.listener.subscription.login.class">MobileCart\SubscriptionBundle\EventListener\Security\Login</parameter>
        <parameter key="cart.repo.subscription">MobileCartSubscriptionBundle:Subscription</parameter>
        <parameter key="cart.repo.subscription_customer">MobileCartSubscriptionBundle:SubscriptionCustomer</parameter>
        <parameter key="cart.subscription.class">MobileCart\SubscriptionBundle\Service\SubscriptionService</parameter>
        <parameter key="cart.subscription.enabled">1</parameter>
        <parameter key="cart.listener.subscription.search.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionSearch</parameter>
        <parameter key="cart.listener.subscription.list.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionList</parameter>
        <parameter key="cart.listener.subscription.edit.return.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionEditReturn</parameter>
        <parameter key="cart.listener.subscription.new.return.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionNewReturn</parameter>
        <parameter key="cart.listener.subscription.create.return.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionCreateReturn</parameter>
        <parameter key="cart.listener.subscription.update.return.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionUpdateReturn</parameter>
        <parameter key="cart.listener.subscription.update.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionUpdate</parameter>
        <parameter key="cart.listener.subscription.insert.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionInsert</parameter>
        <parameter key="cart.listener.subscription.delete.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionDelete</parameter>
        <parameter key="cart.listener.subscription.admin.form.class">MobileCart\SubscriptionBundle\EventListener\Subscription\SubscriptionAdminForm</parameter>

        <parameter key="cart.listener.subscription_customer.search.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerSearch</parameter>
        <parameter key="cart.listener.subscription_customer.list.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerList</parameter>
        <parameter key="cart.listener.subscription_customer.frontend.list.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerFrontendList</parameter>
        <parameter key="cart.listener.subscription_customer.edit.return.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerEditReturn</parameter>
        <parameter key="cart.listener.subscription_customer.new.return.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerNewReturn</parameter>
        <parameter key="cart.listener.subscription_customer.create.return.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerCreateReturn</parameter>
        <parameter key="cart.listener.subscription_customer.update.return.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerUpdateReturn</parameter>
        <parameter key="cart.listener.subscription_customer.add.return.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerAddReturn</parameter>
        <parameter key="cart.listener.subscription_customer.add.post.return.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerAddPostReturn</parameter>
        <parameter key="cart.listener.subscription_customer.add.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerAdd</parameter>
        <parameter key="cart.listener.subscription_customer.add.success.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerAddSuccess</parameter>
        <parameter key="cart.listener.subscription_customer.update.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerUpdate</parameter>
        <parameter key="cart.listener.subscription_customer.insert.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerInsert</parameter>
        <parameter key="cart.listener.subscription_customer.delete.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerDelete</parameter>
        <parameter key="cart.listener.subscription_customer.admin.form.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerAdminForm</parameter>
        <parameter key="cart.listener.subscription_customer.frontend.form.class">MobileCart\SubscriptionBundle\EventListener\SubscriptionCustomer\SubscriptionCustomerFrontendForm</parameter>
    </parameters>

    <services>

        <!-- Login Listener -->
        <service id="cart.listener.subscription.login" lazy="true" class="%cart.listener.subscription.login.class%">
            <tag name="kernel.event_listener" event="login.success" method="onLoginSuccess" priority="40" />
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Event Listener: Checkout Form, configure subscription payment options -->
        <service id="cart.listener.subscription.checkout.form" lazy="true" class="%cart.listener.subscription.checkout.form.class%">
            <tag name="kernel.event_listener" event="checkout.form" method="onCheckoutForm" priority="55" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Event Listener: Add Product to Cart : from a User Session, not for APIs -->
        <service id="cart.listener.subscription.cart.add.product" lazy="true" class="%cart.listener.subscription.cart.add.product.class%">
            <tag name="kernel.event_listener" event="cart.add.product" method="onCartAddProduct" priority="40" />
            <tag name="kernel.event_listener" event="cart.add.discount" method="onCartAddProduct" priority="40" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
        </service>

        <!-- Subscription Service -->
        <service id="cart.subscription" lazy="true" class="%cart.subscription.class%">
            <call method="setIsEnabled">
                <argument type="string">%cart.subscription.enabled%</argument>
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setOrderService">
                <argument type="service" id="cart.order" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
            <call method="setMailer">
                <argument type="service" id="mailer" />
            </call>
        </service>

        <!-- Subscription Event Listeners -->
        <service id="cart.listener.subscription.search" lazy="true" class="%cart.listener.subscription.search.class%">
            <tag name="kernel.event_listener" event="subscription.search" method="onSubscriptionSearch" priority="50" />
        </service>
        <service id="cart.listener.subscription.list" lazy="true" class="%cart.listener.subscription.list.class%">
            <tag name="kernel.event_listener" event="subscription.list" method="onSubscriptionList" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription.edit.return" lazy="true" class="%cart.listener.subscription.edit.return.class%">
            <tag name="kernel.event_listener" event="subscription.edit.return" method="onSubscriptionEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription.new.return" lazy="true" class="%cart.listener.subscription.new.return.class%">
            <tag name="kernel.event_listener" event="subscription.new.return" method="onSubscriptionNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription.create.return" lazy="true" class="%cart.listener.subscription.create.return.class%">
            <tag name="kernel.event_listener" event="subscription.create.return" method="onSubscriptionCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.subscription.update.return" lazy="true" class="%cart.listener.subscription.update.return.class%">
            <tag name="kernel.event_listener" event="subscription.update.return" method="onSubscriptionUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.subscription.update" lazy="true" class="%cart.listener.subscription.update.class%">
            <tag name="kernel.event_listener" event="subscription.update" method="onSubscriptionUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.subscription.insert" lazy="true" class="%cart.listener.subscription.insert.class%">
            <tag name="kernel.event_listener" event="subscription.insert" method="onSubscriptionInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.subscription.delete" lazy="true" class="%cart.listener.subscription.delete.class%">
            <tag name="kernel.event_listener" event="subscription.delete" method="onSubscriptionDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.subscription.admin.form" lazy="true" class="%cart.listener.subscription.admin.form.class%">
            <tag name="kernel.event_listener" event="subscription.admin.form" method="onSubscriptionAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>

        <!-- Subscription Customer Event Listeners -->
        <service id="cart.listener.subscription_customer.search" lazy="true" class="%cart.listener.subscription_customer.search.class%">
            <tag name="kernel.event_listener" event="subscription_customer.search" method="onSubscriptionCustomerSearch" priority="50" />
        </service>
        <service id="cart.listener.subscription_customer.list" lazy="true" class="%cart.listener.subscription_customer.list.class%">
            <tag name="kernel.event_listener" event="subscription_customer.list" method="onSubscriptionCustomerList" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription_customer.edit.return" lazy="true" class="%cart.listener.subscription_customer.edit.return.class%">
            <tag name="kernel.event_listener" event="subscription_customer.edit.return" method="onSubscriptionCustomerEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription_customer.new.return" lazy="true" class="%cart.listener.subscription_customer.new.return.class%">
            <tag name="kernel.event_listener" event="subscription_customer.new.return" method="onSubscriptionCustomerNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription_customer.create.return" lazy="true" class="%cart.listener.subscription_customer.create.return.class%">
            <tag name="kernel.event_listener" event="subscription_customer.create.return" method="onSubscriptionCustomerCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.update.return" lazy="true" class="%cart.listener.subscription_customer.update.return.class%">
            <tag name="kernel.event_listener" event="subscription_customer.update.return" method="onSubscriptionCustomerUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.update" lazy="true" class="%cart.listener.subscription_customer.update.class%">
            <tag name="kernel.event_listener" event="subscription_customer.update" method="onSubscriptionCustomerUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.insert" lazy="true" class="%cart.listener.subscription_customer.insert.class%">
            <tag name="kernel.event_listener" event="subscription_customer.insert" method="onSubscriptionCustomerInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.delete" lazy="true" class="%cart.listener.subscription_customer.delete.class%">
            <tag name="kernel.event_listener" event="subscription_customer.delete" method="onSubscriptionCustomerDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.admin.form" lazy="true" class="%cart.listener.subscription_customer.admin.form.class%">
            <tag name="kernel.event_listener" event="subscription_customer.admin.form" method="onSubscriptionCustomerAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.frontend.form" lazy="true" class="%cart.listener.subscription_customer.frontend.form.class%">
            <tag name="kernel.event_listener" event="subscription_customer.frontend.form" method="onSubscriptionCustomerFrontendForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.add.return" lazy="true" class="%cart.listener.subscription_customer.add.return.class%">
            <tag name="kernel.event_listener" event="subscription_customer.add.return" method="onSubscriptionCustomerAddReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription_customer.add" lazy="true" class="%cart.listener.subscription_customer.add.class%">
            <tag name="kernel.event_listener" event="subscription_customer.add" method="onSubscriptionCustomerAdd" priority="50" />
            <call method="setMailer">
                <argument type="service" id="mailer" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setSecurityPasswordEncoder">
                <argument type="service" id="security.password_encoder" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.add.post.return" lazy="true" class="%cart.listener.subscription_customer.add.post.return.class%">
            <tag name="kernel.event_listener" event="subscription_customer.add.post.return" method="onSubscriptionCustomerAddPostReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.subscription_customer.add.success" lazy="true" class="%cart.listener.subscription_customer.add.success.class%">
            <tag name="kernel.event_listener" event="subscription_customer.add.success" method="onSubscriptionCustomerAddSuccess" priority="50" />
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.subscription_customer.frontend.list" lazy="true" class="%cart.listener.subscription_customer.frontend.list.class%">
            <tag name="kernel.event_listener" event="subscription_customer.frontend.list" method="onSubscriptionCustomerFrontendList" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity"/>
            </call>
        </service>
    </services>

</container>
